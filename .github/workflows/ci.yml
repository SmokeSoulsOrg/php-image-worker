#name: CI Pipeline
#
#on:
#  push:
#    branches: [main]
#  pull_request:
#    branches: [main]
#
#jobs:
#  laravel-tests:
#    name: Laravel Tests
#    runs-on: ubuntu-latest
#    services:
#      mysql:
#        image: mysql:8.0
#        env:
#          MYSQL_ROOT_PASSWORD: root
#          MYSQL_DATABASE: testing
#        ports:
#          - 3306:3306
#        options: >-
#          --health-cmd="mysqladmin ping --silent"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=3
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: 8.3
#          extensions: mbstring, bcmath, mysql
#          coverage: none
#
#      - name: Set up Composer dependencies
#        run: composer install --prefer-dist --no-progress
#
#      - name: Copy .env
#        run: cp .env.example .env
#
#      - name: Generate application key
#        run: php artisan key:generate
#
#      - name: Wait for MySQL
#        run: |
#          until mysqladmin ping -h127.0.0.1 --silent; do
#            echo "Waiting for MySQL..."
#            sleep 1
#          done
#
#      - name: Run migrations
#        env:
#          DB_CONNECTION: mysql
#          DB_HOST: 127.0.0.1
#          DB_PORT: 3306
#          DB_DATABASE: testing
#          DB_USERNAME: root
#          DB_PASSWORD: root
#        run: php artisan migrate --force
#
#      - name: Run tests
#        env:
#          DB_CONNECTION: mysql
#          DB_HOST: 127.0.0.1
#          DB_PORT: 3306
#          DB_DATABASE: testing
#          DB_USERNAME: root
#          DB_PASSWORD: root
#        run: php artisan test
#
#  code-quality:
#    name: Code Quality Checks
#    runs-on: ubuntu-latest
#    services:
#      mysql:
#        image: mysql:8.0
#        env:
#          MYSQL_ROOT_PASSWORD: root
#          MYSQL_DATABASE: laravel
#          MYSQL_USER: laravel
#          MYSQL_PASSWORD: password
#        ports:
#          - 3306:3306
#        options: >-
#          --health-cmd="mysqladmin ping"
#          --health-interval=10s
#          --health-timeout=5s
#          --health-retries=3
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Setup PHP
#        uses: shivammathur/setup-php@v2
#        with:
#          php-version: '8.4'
#          extensions: mbstring, bcmath, pdo_mysql
#          coverage: none
#
#      - name: Cache Composer dependencies
#        uses: actions/cache@v4
#        with:
#          path: ~/.composer/cache
#          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
#          restore-keys: |
#            ${{ runner.os }}-composer-
#
#      - name: Install dependencies
#        run: |
#          composer install --prefer-dist --no-progress
#
#      - name: Run PHPStan
#        run: |
#          composer analyze
#
#      #      - name: Run PHPCS
#      #        run: |
#      #          composer lint --standard=phpcs.xml
#
#      - name: Run Laravel Pint
#        run: |
#          php artisan pint --test
#
#  build-and-push:
#    name: Build and Push Laravel Docker Image
#    runs-on: ubuntu-latest
#    #    needs: [laravel-tests, code-quality] ignore code-quality because I won't have time to fix them all
#    needs: laravel-tests
#    if: success()
#
#    permissions:
#      packages: write
#      contents: read
#
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Log in to GitHub Container Registry
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - name: Build and Push Docker Image
#        uses: docker/build-push-action@v5
#        with:
#          context: .
#          file: ./Dockerfile
#          push: true
#          tags: ghcr.io/smokesoulsorg/php-image-worker:latest
